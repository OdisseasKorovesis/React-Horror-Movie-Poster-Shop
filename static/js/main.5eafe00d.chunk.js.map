{"version":3,"sources":["components/Product/index.js","context/index.js","components/HomepageTitle/index.js","pages/ListOfProducts/index.js","components/Navbar/index.js","components/CartProduct/index.js","components/CartSummary/index.js","pages/Cart/index.js","hooks/useFetch/index.js","components/Recommendations/index.js","components/ProductInfo/index.js","components/RegistrationForm/index.js","pages/Registration/index.js","components/LoginForm/index.js","pages/Login/index.js","components/PaymentForm/index.js","components/InformationForm/index.js","pages/Checkout/index.js","App.js","reportWebVitals.js","index.js"],"names":["Product","props","useState","productCount","posterUrl","poster","className","Card","CardActionArea","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","color","description","length","substring","Math","min","lastIndexOf","trim","getDescriptionText","price","CardActions","to","id","Button","size","onClick","addToCart","ProductsContext","createContext","listOfProducts","cartProducts","removeFromCart","changeQuantity","changeListOfProducts","HomePageTitle","ListOfProducts","useContext","displayedProducts","setDisplayedProducts","Container","fixed","onChange","event","keyword","target","value","toLowerCase","filter","product","includes","name","type","placeholder","aria-label","Grid","container","spacing","map","index","item","xs","overview","vote_average","poster_path","Navbar","class","CartProduct","setProductCount","useEffect","count","disabled","TextField","p","CartSummary","Table","TableHead","TableRow","TableCell","TableBody","scope","quantity","rowSpan","colSpan","sum","forEach","round","toFixed","calculateTotalPrice","Cart","useFetch","url","params","query","setQuery","response","setResponse","apiKey","domain","options","method","headers","a","console","log","fetch","json","results","getResponse","Recommendations","recommended","setRecommended","useParams","shuffledListOfProducts","sort","random","slice","ProductInfo","productInfo","Box","style","backgroundImage","m","RegistrationForm","useForm","register","handleSubmit","errors","watch","password","useRef","current","onSubmit","data","JSON","stringify","for","ref","required","firstName","lastName","message","pattern","email","validate","repeatPassword","terms","Registration","LoginForm","registeredUsers","submittedEmail","submittedPassword","user","Login","PaymentForm","toggleShowPaymentForm","toggleShowInfoForm","src","updatedNumber","replace","document","getElementById","cardNumber","expiryDate","cvv","InformationForm","emptyCart","useHistory","toggleShowCompletionMessage","address","city","state","Checkout","showPaymentForm","setShowPaymentForm","showInfoForm","setShowInfoForm","showCompletionMessage","setShowCompletionMessage","App","setCartProducts","Provider","productExistsInCart","alert","oldArray","updatedList","Array","push","newQuantity","updatedCartProducts","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5eafe00d.chunk.js","sourcesContent":["import { Card, CardActionArea, CardActions, CardContent, CardMedia, Typography, Button } from '@material-ui/core'\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './index.css'\r\n\r\nfunction Product(props) {\r\n\r\n    const [productCount, setProductCount] = useState(1);\r\n\r\n    const posterUrl = `https://image.tmdb.org/t/p/original/${props.poster}`;\r\n\r\n    const getDescriptionText = () => {\r\n\r\n\r\n        let description = props.description.length > 145 ? props.description.substring(0, 145) : props.description;\r\n        description = description.length !== 200 ? description.substring(0, Math.min(description.length, description.lastIndexOf(\" \"))) + \" . . .\" : description;\r\n        return description.trim();\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <Card className='card-root'>\r\n            <div className=\"card-content\">\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        className='product-image'\r\n                        image={posterUrl}\r\n                        title='Product Image' />\r\n                   \r\n                        <CardContent>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                <p className=\"product-title\">{props.title}</p>\r\n                            </Typography>\r\n                            <Typography gutterBottom variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                {getDescriptionText()}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                Total price: <span>{props.price * productCount}€</span>\r\n                            </Typography>\r\n                        </CardContent>\r\n                   \r\n                </CardActionArea>\r\n                <div className='action-area'>\r\n                    <CardActions>\r\n                        <Link to={`/React-Horror-Movie-Poster-Shop/product/${props.id}`}>\r\n                            <Button size=\"small\" color=\"secondary\">\r\n                                <span className=\"details-btn\">View Details</span>\r\n                            </Button>\r\n                        </Link>\r\n                        <Button className='add-btn' size=\"small\" color=\"primary\" onClick={() => props.addToCart(`${props.id}`)}>\r\n                            <span className=\"add-btn\">Add to Cart</span>\r\n                        </Button>\r\n                    </CardActions>\r\n                    </div>\r\n                </div>\r\n\r\n            </Card>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Product;","import { createContext } from 'react';\r\n  \r\nconst ProductsContext = createContext({\r\n    listOfProducts: [],\r\n    cartProducts: [],\r\n    addToCart: () => {},\r\n    removeFromCart: () => {},\r\n    changeQuantity: () => {},\r\n    changeListOfProducts: () => {}\r\n});\r\n\r\nexport default ProductsContext;","import './index.css';\r\n\r\nfunction HomePageTitle() {\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"horror-title text-center mb-3\">The Horror Movie Poster Shop!</div>\r\n            <div className=\"horror-subtitle text-center text-white col-8 mb-4\">Below you'll find the posters of the current top-20 most popular\r\n            horror movies. Click on View Details for more info, or simply add them to your cart and checkout.\r\n        Whenever a new movie rises in popularity, its poster will appear on our homepage top-20.</div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default HomePageTitle;","import { Grid, Container } from '@material-ui/core'\r\nimport { useContext, useState } from 'react';\r\nimport Product from '../../components/Product';\r\nimport ProductsContext from '../../context';\r\nimport HomePageTitle from '../../components/HomepageTitle'\r\nimport './index.css';\r\n\r\n\r\n\r\nfunction ListOfProducts() {\r\n\r\n    const { listOfProducts, cartProducts, addToCart, removeFromCart } = useContext(ProductsContext);\r\n\r\n    const [displayedProducts, setDisplayedProducts] = useState(listOfProducts);\r\n\r\n    const onChange = (event) => {\r\n        let keyword = event.target.value.toLowerCase();\r\n        setDisplayedProducts(listOfProducts.filter(product => product.title.toLowerCase().includes(keyword)));\r\n    };\r\n\r\n    return (\r\n        <Container className=\"container\" fixed>\r\n\r\n            <HomePageTitle className=\"title\" />\r\n            <div className=\"mb-5\">\r\n                <form className=\" justify-content-center form-inline my-2 my-lg-0\" onChange={onChange}>\r\n                    <div className=\"search-container\">\r\n                        <input name=\"searchBar\" className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search for a movie title...\" aria-label=\"Search\" />\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <Grid container spacing={3}>\r\n                {displayedProducts.map((product, index) => (\r\n                    <Grid item xs={4}>\r\n                        <Product key={product.id} id={product.id} title={product.title} description={product.overview} price={product.vote_average} poster={product.poster_path} addToCart={addToCart}></Product>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\nexport default ListOfProducts;","import { AppBar, Toolbar, IconButton, Typography, Button } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ProductsContext from '../../context';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './index.css'\r\n\r\n\r\n\r\nfunction Navbar() {\r\n\r\n  const { listOfProducts, cartProducts, changeListOfProducts } = useContext(ProductsContext);\r\n\r\n  return (\r\n    <div className=\"navbar-container\">\r\n      <nav class=\"navbar fixed-top navbar-light p-4 justify-content-center\">\r\n        <Link className=\"link-icon\" to=\"/React-Horror-Movie-Poster-Shop/\">\r\n          <i class=\"fas fa-ghost\"> <span> Home</span></i>\r\n        </Link>\r\n        <Link className=\"link-icon\" to=\"/React-Horror-Movie-Poster-Shop/cart\">\r\n          <div className=\"ml-3 cart-icon\">\r\n            <i class=\"fas fa-shopping-cart\"> <span> Cart</span></i>\r\n            <div className=\"products-number\">\r\n              {cartProducts.length}\r\n            </div>\r\n          </div>\r\n        </Link>\r\n        <Link className=\"link-icon\" to=\"/React-Horror-Movie-Poster-Shop/login\">\r\n          <div className=\"ml-3\">\r\n          <i class=\"fas fa-sign-in-alt\"> <span> Sign in</span></i>\r\n          </div>\r\n        </Link>\r\n        <Link className=\"link-icon\" to=\"/React-Horror-Movie-Poster-Shop/registration\">\r\n          <div className=\"ml-3\">\r\n          <i class=\"fas fa-address-card\"> <span> Register</span></i>\r\n          </div>\r\n        </Link>\r\n      </nav>\r\n    </div>\r\n\r\n\r\n  )\r\n\r\n};\r\n\r\nexport default Navbar;\r\n\r\n","import { Card, CardActionArea, CardActions, CardContent, CardMedia, Typography, Button, TextField } from '@material-ui/core'\r\nimport './index.css'\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction CartProduct(props) {\r\n\r\n    const [productCount, setProductCount] = useState(1);\r\n\r\n    const reduceQuantity = () => {\r\n        setProductCount((count) => count - 1);\r\n        \r\n    }\r\n\r\n    const increaseQuantity = () => {\r\n        setProductCount((count) => count + 1);\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.changeQuantity(props.id, productCount);\r\n    }, [productCount])\r\n    \r\n    const posterUrl = `https://image.tmdb.org/t/p/original/${props.poster}`;\r\n\r\n    return (\r\n        <Card className='card-root'>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                    className='product-image'\r\n                    image={posterUrl}\r\n                    title='Product Image'\r\n                />\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        <span class=\"poster-title\">{props.title}</span>\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        Total price: <span>{props.price * productCount} €</span>\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                \r\n                <Button size=\"small\" variant='contained' color=\"secondary\" onClick={reduceQuantity} disabled={!(productCount - 1)}>\r\n                    -\r\n                </Button>\r\n                <TextField value={productCount} className='quantity-input' size='small' id=\"filled-basic\" variant=\"filled\" />\r\n                <Button p={0} className='quantity-btn' size=\"small\" variant='contained' color=\"primary\" onClick={increaseQuantity} disabled={productCount >= 5}>\r\n                    +\r\n                </Button>\r\n                <Button className='quantity-btn' size=\"small\" color=\"primary\" onClick={() => props.removeFromCart(`${props.id}`)}>\r\n                    Remove\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default CartProduct;","import { Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\r\nimport { useContext } from 'react';\r\nimport ProductsContext from '../../context';\r\nimport {Link} from 'react-router-dom';\r\nimport './index.css';\r\n\r\n\r\nfunction CartSummary() {\r\n\r\n    const { listOfProducts, cartProducts, addToCart, removeFromCart } = useContext(ProductsContext);\r\n\r\n    const calculateTotalPrice = () => {\r\n        let sum = 0;\r\n        cartProducts.forEach((product) => {\r\n            sum += product.quantity * product.vote_average;\r\n        })\r\n        return (Math.round(sum * 100) / 100).toFixed(2);\r\n    }\r\n\r\n    return (\r\n        <div className=\"table-container border border-white rounded text-white p-2\">\r\n            <h2 className=\"table-title\">Cart Summary</h2>\r\n            <Table className=\"table\" size=\"small\" aria-label=\"a dense table\">\r\n                <TableHead>\r\n                    <TableRow className=\"text-white\">\r\n                        <TableCell className=\"text-white\">Product</TableCell>\r\n                        <TableCell className=\"text-white\">Unit Price</TableCell>\r\n                        <TableCell className=\"text-white\">Quantity</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {cartProducts.map((product) => (\r\n                        <TableRow key={product.id}>\r\n                            <TableCell component=\"th\" scope=\"row\" className=\"text-white\">\r\n                                {product.title}\r\n                            </TableCell>\r\n                            <TableCell className=\"text-white\">{product.vote_average}€</TableCell>\r\n                            <TableCell className=\"text-white\">{product.quantity}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                    <TableRow>\r\n                        <TableCell rowSpan={3} />\r\n                        <TableCell className=\"text-white\" colSpan={1}>Total Price</TableCell>\r\n                        <TableCell className=\"text-white\">{calculateTotalPrice()}€</TableCell>\r\n                    </TableRow>\r\n                </TableBody>\r\n            </Table>\r\n            {cartProducts.length !== 0 ? <div className=\"row justify-content-center\">\r\n                <Link to=\"/React-Horror-Movie-Poster-Shop/checkout\">\r\n                    <button className=\"btn\">Checkout</button>\r\n                </Link>\r\n            </div> : <></>}\r\n            \r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default CartSummary;","import { Grid, Container } from '@material-ui/core'\r\nimport {useContext} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport CartProduct from '../../components/CartProduct';\r\nimport CartSummary from '../../components/CartSummary';\r\nimport Product from '../../components/Product';\r\nimport ProductsContext from '../../context';\r\nimport './index.css'\r\n\r\nfunction Cart() {\r\n\r\n    const {listOfProducts, cartProducts, addToCart, removeFromCart, changeQuantity} = useContext(ProductsContext);\r\n\r\n    return (\r\n        <Container className=\"container\" fixed>\r\n            <Grid container spacing={3}>\r\n                <CartSummary item xs={3}/>\r\n                <Grid item xs={9} container spacing={3}>\r\n                {cartProducts.length === 0 ? \r\n                <h2 className=\"empty-cart-text ml-5 text-white\">Your cart is empty, almost like... a haunted house! \r\n                <br/>\r\n                Try clicking &nbsp;\r\n                <Link className=\"link-to-home\" to=\"/React-Horror-Movie-Poster-Shop/\"><span className=\"link-to-home\">here</span></Link>\r\n                &nbsp; and adding some products.\r\n                </h2>\r\n                : cartProducts.map((product) => (\r\n                    <Grid item xs={4}>\r\n                        <CartProduct key={product.id} id={product.id} title={product.title} description={product.description} price={product.vote_average} poster={product.poster_path} removeFromCart={removeFromCart} changeQuantity={changeQuantity}></CartProduct>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n            </Grid>\r\n            \r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\nexport default Cart;","import { useState, useEffect } from 'react';\r\n\r\nfunction useFetch(url, params) {\r\n    const [query, setQuery] = useState(url);\r\n    const [response, setResponse] = useState({});\r\n\r\n    const apiKey = '382f7f7f00233c7b0b8ec7ca0042ea67';\r\n    const domain = 'https://api.themoviedb.org/3';\r\n    const options = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const getResponse = async () => {\r\n            try {\r\n                console.log(query);\r\n                console.log(`${domain}/${query}?api_key=${apiKey}&${params}`);\r\n                const response = await fetch(`${domain}/${query}?api_key=${apiKey}&${params}`, {\r\n                    ...options\r\n                })\r\n                const results = await response.json();\r\n                setResponse(results);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n\r\n        getResponse();\r\n    }, [query])\r\n\r\n    return {response, query, setQuery};\r\n}\r\n\r\nexport default useFetch;","import { useParams } from \"react-router\";\r\nimport useFetch from '../../hooks/useFetch';\r\nimport { Grid } from '@material-ui/core';\r\nimport Product from '../Product'\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport ProductsContext from \"../../context\";\r\nimport './index.css'\r\n\r\n\r\nfunction Recommendations() {\r\n    const [recommended, setRecommended] = useState([]);\r\n    let { id } = useParams();\r\n    const { response, query, setQuery } = useFetch(`movie/${id}/similar`, '');\r\n    useEffect(() => {\r\n        setQuery(`movie/${id}/similar`, '');\r\n    }, [id]);\r\n    \r\n    const {listOfProducts} = useContext(ProductsContext);\r\n    let shuffledListOfProducts = listOfProducts.sort(() => 0.5 - Math.random);\r\n    shuffledListOfProducts= shuffledListOfProducts.filter(product => product.id != id);\r\n\r\n    useEffect(() => {\r\n        setRecommended(response.results);\r\n    }, [response]);\r\n\r\n    console.log(recommended);\r\n\r\n\r\n    return (\r\n        <>\r\n        <h2 className=\"recommendations-title text-white mt-4\">Other similar products:</h2>\r\n        <div className=\"row mb-5\">\r\n            {recommended && recommended.length != 0 ?\r\n                recommended.slice(0, 3).map((product) => (\r\n                    <div className=\"col-4\">\r\n                        <Product key={product.id} id={product.id} title={product.title} description={\"\"} price={product.vote_average} poster={product.poster_path}></Product>\r\n                    </div>\r\n                )) :\r\n                shuffledListOfProducts.slice(0, 3).map((product) => (\r\n                    <div className=\"col-4\">\r\n                        <Product key={product.id} id={product.id} title={product.title} description={\"\"} price={product.vote_average} poster={product.poster_path}></Product>\r\n                    </div>\r\n                ))}\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Recommendations;","import { useContext, useEffect, useState } from \"react\";\r\nimport { useParams, useLocation, useHistory } from \"react-router\";\r\nimport { Container, Grid, Box, Button } from '@material-ui/core'\r\nimport ProductsContext from \"../../context\";\r\nimport './index.css';\r\nimport Recommendations from \"../Recommendations\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport { Euro } from \"@material-ui/icons\";\r\n\r\nfunction ProductInfo() {\r\n\r\n    const { listOfProducts, cartProducts, addToCart, removeFromCart } = useContext(ProductsContext);\r\n\r\n    let { id } = useParams();\r\n    \r\n    const {response, query, setQuery} = useFetch(`movie/${id}`, '');\r\n\r\n    useEffect(() => {\r\n        setQuery(`movie/${id}`, '');\r\n    }, [id])\r\n\r\n    \r\n    const productInfo = response;\r\n    \r\n    const posterUrl = `https://image.tmdb.org/t/p/original/${productInfo.poster_path}`;\r\n\r\n    return (\r\n        <Container className=\"container\" fixed>\r\n            <Grid container spacing={2}>\r\n                <Box className='img-container border border-white' style={{backgroundImage: `url(${posterUrl})`}} item xs={5} m={5}>\r\n                </Box>\r\n                <Box className='info-container text-white' item xs={4} m={5}>\r\n                    <p className=\"movie-title\">{`${productInfo.title}`}</p>\r\n                    <p>{`${productInfo.overview}`}</p>\r\n                    <p>Price: {`${productInfo.vote_average}€`}</p>\r\n                    <button className=\"btn add-button\" onClick={() => addToCart(id)}>Add to cart</button>\r\n                </Box>\r\n                \r\n            </Grid>\r\n            <Recommendations/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProductInfo;","import { useForm } from \"react-hook-form\";\r\nimport { useRef } from \"react\";\r\nimport './index.css';\r\n\r\nfunction RegistrationForm() {\r\n\r\n    const { register, handleSubmit, errors, watch } = useForm();\r\n    const password = useRef({});\r\n    password.current = watch(\"password\", \"\");\r\n\r\n    const onSubmit = (data) => {\r\n        console.log('Form Submitted Succesfully');\r\n        console.log(`Data submitted: ${JSON.stringify(data)}`);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\" onSubmit={handleSubmit(onSubmit)}>\r\n            <h2 className=\"form-title text-white text-center\">Don't Have an Account? Register Here!</h2>\r\n            <div className=\"row justify-content-center\">\r\n                <form className=\"form-body p-3 rounded col-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"firstName\" className=\"text-white\">First Name</label>\r\n                        <input name=\"firstName\" ref={register({ required: \"Enter your First Name\" })} type=\"text\" class=\"form-control\" id=\"form_firstName\" placeholder=\"Enter Your First Name\" />\r\n                        {errors.firstName && <p>First name is required</p>}\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"lastName\" className=\"text-white\">Last Name</label>\r\n                        <input name=\"lastName\" ref={register({ required: \"Enter your Last Name\" })} type=\"text\" class=\"form-control\" id=\"form_lastName\" placeholder=\"Enter Your Last Name\" />\r\n                        {errors.lastName && <p>{errors.lastName.message}</p>}\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"email\" className=\"text-white\">Email address</label>\r\n                        <input name=\"email\" ref={register({ required: true, pattern: { value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i } },)} type=\"text\" class=\"form-control\" id=\"email\" placeholder=\"Enter Your Email\" />\r\n                        {errors.email?.type === \"required\" && \"Email is required\"}\r\n                        {errors.email?.type === \"pattern\" && \"Please enter valid email\"}\r\n                    </div>\r\n                    \r\n                    \r\n                    <div class=\"form-group\">\r\n                        <label for=\"repeatPassword\" className=\"text-white\">Password</label>\r\n                        <input name=\"repeatPassword\" ref={register({ validate: value => value === password.current || \"The passwords do not match\" })} type=\"password\" class=\"form-control\" id=\"repeatPassword\" placeholder=\"Repeat Your Password\" />\r\n                        {errors.repeatPassword && <p>{errors.repeatPassword.message}</p>}\r\n                    </div>\r\n                    <div class=\"form-check\">\r\n                        <input name=\"terms\" ref={register({ required: \"You must accept the terms in order to continue.\" })} type=\"checkbox\" class=\"form-check-input\" id=\"terms\" />\r\n                        {errors.terms && <p>{errors.terms.message}</p>}\r\n                        <label class=\"form-check-label\" for=\"terms \" className=\"text-white\">Click to Accept the Terms &amp; Conditions</label>\r\n                    </div>\r\n                    <input type=\"submit\" class=\"btn btn-dark mt-3\" />\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegistrationForm;","import RegistrationForm from \"../../components/RegistrationForm\";\r\n\r\nfunction Registration () {\r\n    return (\r\n        <RegistrationForm />\r\n    );\r\n};\r\n\r\nexport default Registration;","import { useForm } from 'react-hook-form';\r\nimport './index.css'\r\n\r\nfunction LoginForm() {\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const registeredUsers = [\r\n        {\r\n            email: 'antegeia21@hotmail.com',\r\n            password: '1qaz!QAZ'\r\n        }\r\n    ];\r\n\r\n    const onSubmit = (data) => {\r\n        console.log('Form Submitted Succesfully');\r\n        const submittedEmail = data.email;\r\n        const submittedPassword = data.password;\r\n        console.log(`Data submitted: ${JSON.stringify(data)}`);\r\n\r\n        registeredUsers.forEach((user) => {\r\n            if (user.email === submittedEmail && user.password === submittedPassword) {\r\n                console.log(\"Succesful login!\");\r\n            } else if (user.email === submittedEmail && user.password !== submittedPassword) {\r\n                console.log(\"Wrong Password!\");\r\n            } else {\r\n                console.log(\"Cannot find account with specified email!\")\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <div className=\"container p-3\" onSubmit={handleSubmit(onSubmit)}>\r\n            <h2 className=\"form-title h2 text-center mb-4 text-white\">Log in to the Shop</h2>\r\n            <div class=\"row justify-content-center\">\r\n                <form className=\" form-body rounded col-6 p-3\">\r\n                    <div class=\"form-group\">\r\n                        <label className=\"text-white\" for=\"email\">Email address</label>\r\n                        <input name=\"email\" ref={register({ required: \"Email is required\" })} type=\"text\" class=\"form-control\" id=\"email\" placeholder=\"Enter your Email\" />\r\n                        {errors.email && <p>{errors.email.message}</p>}\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label className=\"text-white\" for=\"password\">Password</label>\r\n                        <input name=\"password\" ref={register({ required: \"Password is required\" })} type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"Enter your Password\" />\r\n                        {errors.password && <p>{errors.password.message}</p>}\r\n                    </div>\r\n                    <input type=\"submit\" class=\"btn btn-dark mt-3\" />\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","import LoginForm from \"../../components/LoginForm\";\r\n\r\nfunction Login () {\r\n    return (\r\n        <LoginForm />\r\n    );\r\n};\r\n\r\nexport default Login;","import { useForm } from 'react-hook-form';\r\n\r\nfunction PaymentForm(props) {\r\n\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const onSubmit = () => {\r\n        props.toggleShowPaymentForm(false);\r\n        props.toggleShowInfoForm(true);\r\n    };\r\n\r\n    const removeSpacesFromCCNumber = (event) => {\r\n        const updatedNumber = event.target.value.replace(\" \", \"\");\r\n        document.getElementById('cardNumber').value = updatedNumber;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"payment-form\" onSubmit={handleSubmit(onSubmit)}>\r\n                <h2 className=\"form-title h2 text-center mb-4 text-white\">Enter your payment details</h2>\r\n                <div class=\"row justify-content-center\">\r\n                    <form className=\" form-body rounded col-6 p-3\">\r\n                        <div class=\"icons\"> <img src=\"https://img.icons8.com/color/48/000000/visa.png\" /> <img src=\"https://img.icons8.com/color/48/000000/mastercard-logo.png\" /> <img src=\"https://img.icons8.com/color/48/000000/maestro.png\" /> </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"firstName\" className=\"text-white\">Cardholder's Name</label>\r\n                            <input name=\"firstName\" ref={register({ required: \"Enter cardholder's name\" })} type=\"text\" class=\"form-control\" id=\"firstName\" placeholder=\"Enter cardholder's name\" />\r\n                            {errors.firstName && <p className=\"text-danger font-italic\">Cardholder's name is required</p>}\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"cardNumber\" className=\"text-white\">Credit Card Number</label>\r\n                            <input name=\"cardNumber\"\r\n                                ref={register({\r\n                                    required: true,\r\n                                    pattern: { value: /^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/ }\r\n                                })}\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                id=\"cardNumber\"\r\n                                placeholder=\"Enter a 16-digit card number\"\r\n                                onChange={removeSpacesFromCCNumber} />\r\n                            {errors.cardNumber?.type === \"required\" && <p className=\"text-danger font-italic\">Card number is required</p>}\r\n                            {errors.cardNumber?.type === \"pattern\" && <p className=\"text-danger font-italic\">Please enter a valid credit card number</p>}\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"expiryDate\" className=\"text-white\">Expiry Date</label>\r\n                            <input name=\"expiryDate\" ref={register({ required: \"Enter card's expiry date\" })} type=\"text\" class=\"form-control\" id=\"expiryDate\" placeholder=\"MM/YYYY\" />\r\n                            {errors.expiryDate && <p className=\"text-danger font-italic\">Expiry date is required</p>}\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"cvv\" className=\"text-white\">CVV Number</label>\r\n                            <input name=\"cvv\" ref={register({ required: true, pattern: { value: /^[0-9]{3,4}$/ } },)} type=\"text\" class=\"form-control\" id=\"cvv\" placeholder=\"Please enter CVV number\" />\r\n                            {errors.cvv?.type === \"required\" && <p className=\"text-danger font-italic\">CVV number is required</p>}\r\n                            {errors.cvv?.type === \"pattern\" && <p className=\"text-danger font-italic\">Please enter a valid CVV number</p>}\r\n                        </div>\r\n                        <input type=\"submit\" class=\"btn btn-dark mt-3\" value=\"Next Step\" />\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default PaymentForm;","import { useForm } from \"react-hook-form\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useContext, useRef } from \"react\";\r\nimport ProductsContext from \"../../context\";\r\n\r\nfunction InformationForm(props) {\r\n\r\n    const {cartProducts, emptyCart} = useContext(ProductsContext);\r\n\r\n    const { register, handleSubmit, errors, watch } = useForm();\r\n    const history = useHistory();\r\n\r\n    const onSubmit = (data) => {\r\n        props.toggleShowInfoForm(false);\r\n        props.toggleShowCompletionMessage(true);\r\n        emptyCart();\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\" onSubmit={handleSubmit(onSubmit)}>\r\n            <h2 className=\"form-title text-white text-center\">Enter your Delivery Information</h2>\r\n            <div className=\"row justify-content-center\">\r\n                <form className=\"form-body p-3 rounded col-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"firstName\" className=\"text-white\">First Name</label>\r\n                        <input name=\"firstName\" ref={register({ required: \"Enter your First Name\" })} type=\"text\" class=\"form-control\" id=\"form_firstName\" placeholder=\"Enter your First Name\" />\r\n                        {errors.firstName && <p>First name is required</p>}\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"lastName\" className=\"text-white\">Last Name</label>\r\n                        <input name=\"lastName\" ref={register({ required: \"Enter your Last Name\" })} type=\"text\" class=\"form-control\" id=\"form_lastName\" placeholder=\"Enter your Last Name\" />\r\n                        {errors.lastName && <p>{errors.lastName.message}</p>}\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"address\" className=\"text-white\">Address</label>\r\n                        <input name=\"address\" ref={register({ required: \"Enter your Address\" })} type=\"text\" class=\"form-control\" id=\"address\" placeholder=\"Enter your Street and Number \" />\r\n                        {errors.address && <p>Address is required</p>}\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"city\" className=\"text-white\">City</label>\r\n                        <input name=\"city\" ref={register({ required: \"Enter your City\" })} type=\"text\" class=\"form-control\" id=\"city\" placeholder=\"Enter your City \" />\r\n                        {errors.city && <p>City is required</p>}\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"state\" className=\"text-white\">State/Province</label>\r\n                        <input name=\"state\" ref={register({ required: \"Enter your State/Province\" })} type=\"text\" class=\"form-control\" id=\"state\" placeholder=\"Enter the state/province your city belongs in\" />\r\n                        {errors.state && <p>State/Province is required</p>}\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"postal\" className=\"text-white\">Postal Code</label>\r\n                        <input name=\"postal\" ref={register({ required: \"Enter your Postal Code\" })} type=\"text\" class=\"form-control\" id=\"state\" placeholder=\"Enter your postal code\" />\r\n                        {errors.state && <p>Postal Code is required</p>}\r\n                    </div>\r\n                    <input type=\"submit\" class=\"btn btn-dark mt-3\" value=\"Finalize order\" />\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InformationForm;","import CartSummary from \"../../components/CartSummary\";\r\nimport PaymentForm from \"../../components/PaymentForm\";\r\nimport InformationForm from '../../components/InformationForm';\r\nimport { useState } from 'react';\r\nimport './index.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Checkout() {\r\n\r\n    const [showPaymentForm, setShowPaymentForm] = useState(true);\r\n    const [showInfoForm, setShowInfoForm] = useState(false);\r\n    const [showCompletionMessage, setShowCompletionMessage] = useState(false);\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-2\">\r\n                    <CartSummary />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    {!showPaymentForm ? <></> :\r\n                        <PaymentForm toggleShowPaymentForm={setShowPaymentForm} toggleShowInfoForm={setShowInfoForm} />}\r\n                    {!showInfoForm ? <> </> : <InformationForm toggleShowInfoForm={setShowInfoForm} toggleShowCompletionMessage={setShowCompletionMessage} />}\r\n                    {!showCompletionMessage ? <></> : <h2 className=\"text-white completion-message\">\r\n                        Thank you for shopping from the Horror Movie Poster Shop!\r\n                        <br/>\r\n                        <br/>\r\n                        You will receive a confirmation email, as soon as your order is processed.\r\n                        <br/>\r\n                        Meanwhile you can browse more items &nbsp;\r\n                        <Link className=\"link-to-home\" to=\"/React-Horror-Movie-Poster-Shop/\"><span className=\"link-to-home\">here</span></Link>.\r\n                        </h2>}\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Checkout;","import './App.css';\nimport ListOfProducts from './pages/ListOfProducts';\nimport { useEffect, useState } from 'react';\nimport ProductsContext from './context'\nimport Navbar from './components/Navbar'\nimport Cart from './pages/Cart'\nimport ProductInfo from './components/ProductInfo'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport useFetch from './hooks/useFetch';\nimport Registration from './pages/Registration';\nimport Login from './pages/Login';\nimport CartProduct from './components/CartProduct';\nimport PaymentForm from './components/PaymentForm';\nimport Checkout from './pages/Checkout';\n\nfunction App() {\n\n  const [cartProducts, setCartProducts] = useState([]);\n  let [listOfProducts, setListOfProducts] = useState([]);\n\n  const removeFromCart = (id) => {\n    const updatedList = new Array();\n    cartProducts.forEach((product) => {\n      \n      if (product.id == id) {\n        \n      } else {\n        updatedList.push(product);\n      }\n      setCartProducts(updatedList);\n    });\n  }\n\n  const emptyCart = () => {\n    setCartProducts([]);\n  }\n\n  const addToCart = (id) => {\n    listOfProducts.forEach((product) => {\n      if (product.id == id) {\n        let productExistsInCart = false;\n        for (const cartProduct of cartProducts) {\n          if (cartProduct.id == product.id) {\n            alert('This product is already in your cart! If you want to increase the quantity, you can do so inside the cart.')\n            productExistsInCart = true;\n          }\n        }\n        if(!productExistsInCart) {\n          setCartProducts(oldArray => [...oldArray, product]);\n        }\n      }\n    });\n  };\n\n  const changeQuantity = (id, newQuantity) => {\n    cartProducts.forEach((product, index) => {\n      if (product.id == id) {\n        let updatedCartProducts = [...cartProducts];\n        updatedCartProducts[index].quantity = newQuantity;\n        setCartProducts(updatedCartProducts);\n      }\n    });\n  };\n\n\n\n  const { response, query, setQuery } = useFetch('discover/movie', 'with_genres=27&sort_by=populatity_desc&page=1');\n  console.log(response.results);\n  listOfProducts = response.results;\n\n  return (\n    <div className=\"main-container\">\n      <Router>\n        <ProductsContext.Provider value={{ listOfProducts, cartProducts, addToCart, removeFromCart, emptyCart, changeQuantity }}>\n          <Navbar />\n          <div>\n            <Route exact path='/React-Horror-Movie-Poster-Shop/' component={listOfProducts && ListOfProducts} />\n            <Route exact path='/React-Horror-Movie-Poster-Shop/cart' component={Cart} />\n            <Route exact path='/React-Horror-Movie-Poster-Shop/product/:id' component={ProductInfo} />\n            <Route exact path='/React-Horror-Movie-Poster-Shop/registration' component={Registration} />\n            <Route exact path='/React-Horror-Movie-Poster-Shop/login' component={Login} />\n            <Route exact path='/React-Horror-Movie-Poster-Shop/checkout' component={Checkout}/>\n          </div>\n        </ProductsContext.Provider>\n      </Router>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      \n      <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}